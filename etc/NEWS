GNU Emacs NEWS -- history of user-visible changes.

Copyright (C) 2014-2015 Free Software Foundation, Inc.
See the end of the file for license conditions.

Please send Emacs bug reports to bug-gnu-emacs@gnu.org.
If possible, use M-x report-emacs-bug.

This file is about changes in Emacs version 25.

See files NEWS.24, NEWS.23, NEWS.22, NEWS.21, NEWS.20, NEWS.19, NEWS.18,
and NEWS.1-17 for changes in older Emacs versions.

You can narrow news to a specific version by calling `view-emacs-news'
with a prefix argument or by typing C-u C-h C-n.

Temporary note:
+++ indicates that all necessary documentation updates are complete.
    (This means all relevant manuals in doc/ AND lisp doc-strings.)
--- means no change in the manuals is needed.
When you add a new item, use the appropriate mark if you are sure it applies,
otherwise leave it unmarked.


* Installation Changes in Emacs 25.1

+++
** Building Emacs now requires C99 or later.

** Building Emacs now requires GNU make, version 3.81 or later.

** By default, Emacs no longer works on IRIX.  We expect that Emacs
users are not affected by this, as SGI stopped supporting IRIX in
December 2013.  If you are affected, please send a bug report.  You
should be able to work around the problem either by porting the Emacs
undumping code to GCC under IRIX, or by configuring --with-wide-int,
or by sticking with Emacs 24.4.

** 'configure' now prefers gnustep-config when configuring GNUstep.
If gnustep-config is not available, the old heuristics are used.

---
** The configure option `--with-pkg-config-prog' has been removed.
Use './configure PKG_CONFIG=/full/name/of/pkg-config' if you need to.

** The configure option '--enable-silent-rules' is now the default,
and silent rules are now quieter.  To get the old behavior where
'make' chatters a lot, configure with '--disable-silent-rules' or
build with 'make V=1'.

---
** The configure option '--with-gameuser' now allows to specify a
group instead of a user if its argument is prefixed by ':' (a colon).
This will cause the game score files in ${localstatedir}/games/emacs
to be owned by that group, and the helper program for updating them to
be installed setgid.  The option now defaults to the 'games' group.

---
** The `grep-changelog' script (and its manual page) are no longer included.
It has no particular connection to Emacs and has not changed in years,
so if you want to use it, you can always take a copy from an older Emacs.


* Startup Changes in Emacs 25.1


* Changes in Emacs 25.1

** New command `comment-line' bound to `C-x C-;'.

** New function `custom-prompt-customize-unsaved-options' checks for
unsaved customizations and prompts user to customize (if found).

+++
** Network security (TLS/SSL certificate validity and the like) is
added via the new Network Security Manager (NSM) and controlled via
the `network-security-level' variable.

** C-h l now also lists the commands that were run.

---
** The new M-s M-w key binding uses eww to search the web for the
text in the region.

** M-x suggests shorthands and ignores obsolete commands for completion.
** x-select-enable-clipboard is renamed select-enable-clipboard.
x-select-enable-primary and renamed select-enable-primary.
Additionally they both now apply to all systems (OSX, GNUstep, Windows, you
name it), with the proviso that on some systems (e.g. Windows)
select-enable-primary is ineffective since the system doesn't
have the equivalent of a primary selection.

+++
** terpri gets an optional arg ENSURE to conditionally output a newline.

+++
** New macro `define-advice'.

** `insert-register' now leaves point after the inserted text
when called interactively.  A prefix argument toggles this behavior.

** New var `truncate-string-ellipsis' to choose how to indicate truncation.

+++
** The new variable `term-file-aliases' replaces some files from lisp/term.
The function `tty-run-terminal-initialization' consults this variable
when deciding what terminal-specific initialization code to run.

---
** New variable `system-configuration-features', listing some of the
main features that Emacs was compiled with.  This is mainly intended
for use in Emacs bug reports.

+++
** A password is now hidden also when typed in batch mode.  Another
hiding character but the default `.' can be used by let-binding the
variable `read-hide-char'.

** The new functions `string-collate-lessp' and `string-collate-equalp'
preserve the collation order as defined by the system's locale(1)
environment.  For the time being this is implemented for modern POSIX
systems and for MS-Windows, for other systems they fall back to their
counterparts `string-lessp' and `string-equal'.

*** The ls-lisp package uses `string-collate-lessp' to sort file names.
If you want the old, locale-independent sorting, customize the new
option `ls-lisp-use-string-collate' to a nil value.

*** The MS-Windows specific variable `w32-collate-ignore-punctuation',
if set to a non-nil value, causes the above 2 functions to ignore
symbol and punctuation characters when collating strings.  This
emulates the behavior of modern Posix platforms when the locale's
codeset is "UTF-8" (as in "en_US.UTF-8").  This is needed because
MS-Windows doesn't support UTF-8 as codeset in its locales.

+++
** The new function `bidi-find-overridden-directionality' allows to
find characters whose directionality was, perhaps maliciously,
overridden by directional override control characters.  Lisp programs
can use this to detect potential phishing of URLs and other links that
exploits bidirectional display reordering.

+++
** The new function `buffer-substring-with-bidi-context' allows to
copy a portion of a buffer into a different location while preserving
the visual appearance both of the copied text and the text at
destination, even when the copied text includes mixed bidirectional
text and directional control characters.

** New variable `ns-use-fullscreen-animation' controls animation for
non-native NS fullscreen.  The default is nil.  Set to t to enable
animation when entering and leaving fullscreen.  For native OSX fullscreen
this has no effect.

** A new text property `inhibit-read-only' can be used in read-only
buffers to allow certain parts of the text to be writable.

** A new function `directory-files-recursively' returns all matching
files (recursively) under a directory.

** The new `directory-name-p' can be used to check whether a file
name (as returned from, for instance, `file-name-all-completions' is
a directory file name.  It returns non-nil if the last character in
the name is a forward slash.

+++
** New variable `fast-but-imprecise-scrolling' inhibits
fontification during full screen scrolling operations, giving less
hesitant operation during auto-repeat of C-v, M-v at the cost of
possible inaccuracies in the end position.

** The function `font-info' now returns more details about a font.
In particular, it now returns the average width of the font's
characters, which can be used for geometry-related calculations.

** A new function `default-font-width' returns the average width of a
character in the current buffer's default font.  If the default face
is remapped (see `face-remapping-alist'), the value for the remapped
face is returned.  This function complements the existing function
`default-font-height'.

** New functions `window-font-height' and `window-font-width' return
the height and average width of characters in a specified face and
window.  If FACE is remapped (see `face-remapping-alist'), the
function returns the information for the remapped face.

** A new function `window-max-chars-per-line' returns the maximal
number of characters that can be displayed on one line.  If a face
and/or window are provided, these values are used for the
calculation.  This function is different from `window-body-width' in
that it accounts for (i) continuation glyphs, (ii) the size of the
font, and (iii) the specified window.


* Editing Changes in Emacs 25.1

** Unicode names entered via C-x 8 RET now use substring completion by default.

** New minor mode global-eldoc-mode is enabled by default.

** Emacs now supports "bracketed paste mode" when running on a terminal
that supports it.  This facility allows Emacs to understand pasted
chunks of text as strings to be inserted, instead of interpreting each
character in the pasted text as actual user input.  This results in a
paste experience similar to that under a window system, and significant
performance improvements when pasting large amounts of text.

** Emacs now supports the latest version of the UBA.
The Emacs implementation of the Unicode Bidirectional Algorithm (UBA)
was updated to support all the latest additions and changes introduced
in Unicode Standard versions 6.3 and 7.0, and a few changes suggested
for Unicode 8.0.  This includes full support for directional isolates
and the Bidirectional Parentheses Algorithm (BPA) specified by these
Unicode standards.

** You can access `mouse-buffer-menu' (C-down-mouse-1) using C-f10.

+++
** New buffer-local `electric-pair-local-mode'.


* Changes in Specialized Modes and Packages in Emacs 25.1
** xterm-mouse-mode now supports mouse-tracking (if your xterm supports it).

** package.el
*** `package-install-from-buffer' and `package-install-file' work on directories.
This follows the same rules as installing from a .tar file, except the
-pkg file is optional.

*** Packages which are dependencies of other packages cannot be deleted.
The FORCE argument to `package-delete' overrides this.

*** New custom variable `package-selected-packages' tracks packages
which were installed by the user (as opposed to installed as
dependencies). This variable can also be manually customized.

*** New command `package-install-user-selected-packages' installs all
packages from `package-selected-packages' which are currently missing.

*** New command `package-autoremove' removes all packages which were
installed strictly as dependencies but are no longer needed.

** Shell

When you invoke `shell' interactively, the *shell* buffer will now
display in a new window.  However, you can customize this behavior via
the `display-buffer-alist' variable.  For example, to get
the old behavior -- *shell* buffer displays in current window -- use
(add-to-list 'display-buffer-alist
     '("^\\*shell\\*$" . (display-buffer-same-window))).


** EIEIO
*** The `:protection' slot option is not obeyed any more.
*** The `newname' argument to constructors is optional&deprecated.
If you need your objects to be named, do it by inheriting from `eieio-named'.
*** The <class>-list-p and <class>-child-p functions are declared obsolete.
*** The <class> variables are declared obsolete.
*** The <initarg> variables are declared obsolete.
*** defgeneric and defmethod are declared obsolete.
*** `constructor' is now an obsolete alias for `make-instance'.

** ido
*** New command `ido-bury-buffer-at-head' bound to C-S-b
Bury the buffer at the head of `ido-matches', analogous to how C-k
kills the buffer at head.

** Minibuffer

*** You can use <up> and <down> keys to move point in the multi-line
minibuffer just as in an ordinary buffer.  Only when point moves over
the bottom/top of the minibuffer it goes to the next/previous history
element.  The new commands bound to <up> and <down> in the minibuffer:
`next-line-or-history-element' and `previous-line-or-history-element'.

** Search and Replace

*** Query-replace history is enhanced.
When query-replace reads the FROM string from the minibuffer, typing
`M-p' will now show previous replacements as "FROM SEP TO", where FROM
and TO are the original text and its replacement, and SEP is an arrow
string defined by the new variable `query-replace-from-to-separator'.
To select a prior replacement, type `M-p' until the desired
replacement appears in the minibuffer, and then exit the minibuffer by
typing RET.

** Calc
+++
*** If `quick-calc' is called with a prefix argument, insert the
result of the calculation into the current buffer.

** ElDoc
*** New minor mode `global-eldoc-mode'
*** `eldoc-documentation-function' now defaults to `ignore'
*** `describe-char-eldoc' displays information about character at point,
and can be used as a default value of `eldoc-documentation-function'.  It is
useful when, for example, one needs to distinguish various spaces (e.g. ] [,
] [, ] [, etc.) while using mono-spaced font.

** eww

---
*** HTML can now be rendered using variable-width fonts.

+++
*** A new command `F' (`eww-toggle-fonts') can be used to toggle
whether to use variable-pitch fonts or not.  The user can also
customize the `shr-use-fonts' variable.

+++
*** A new command `R' (`eww-readable') will try do identify the main
textual parts of a web page and display only that, leaving menus and
the like off the page.

---
*** You can now use several eww buffers in parallel by renaming eww
buffers you want to keep separate.

+++
*** Partial state of the eww buffers (the URIs and the titles of the
pages visited) is now preserved in the desktop file.

+++
*** `eww-after-render-hook' is now called after eww has rendered
the data in the buffer.

---
*** The `eww-reload' command now takes a prefix to not reload via
the net, but just use the local copy of the HTML.

+++
*** The DOM shr and eww uses has been changed to the general Emacs
xml.el/libxml2 DOM, and a new package dom.el has been added to
interact with this DOM.  See the Emacs Lisp manual for interface
details.

+++
*** `mailcap-mime-data' is now consulted when displaying PDF files.

+++
*** The new `S' command will list all eww buffers, and allow managing
them.

---
*** https pages with valid certificates have headers marked in green, while
invalid certificates are marked in red.

** Message mode

*** text/html messages that contain inline image parts will be
transformed into multipart/related messages before sending.

** pcase
*** New UPatterns `quote', `app', `cl-struct', and `eieio'.
*** New UPatterns can be defined with `pcase-defmacro'.
+++
*** New vector QPattern.

** Lisp mode
*** Strings after `:documentation' are highlighted as docstrings.

** Rectangle editing
*** Rectangle Mark mode can have corners past EOL or in the middle of a TAB.
*** C-x C-x in rectangle-mark-mode now cycles through the four corners.
*** `string-rectangle' provides on-the-fly preview of the result.

** New font-lock functions font-lock-ensure and font-lock-flush, which
should be used instead of font-lock-fontify-buffer when called from Elisp.

** Macro `minibuffer-with-setup-hook' takes (:append FUN) to mean
appending FUN to `minibuffer-setup-hook'.

** cl-lib
*** New functions cl-fresh-line, cl-digit-char-p and cl-parse-integer.

** seq
*** New seq library:
The seq library adds sequence manipulation functions and macros that
complement basic functions provided by subr.el. All functions are
prefixed with `seq-' and work on lists, strings and vectors.

** Calendar and diary

+++
*** New commands to insert diary entries with Chinese dates:
`diary-chinese-insert-anniversary-entry' `diary-chinese-insert-entry'
`diary-chinese-insert-monthly-entry', `diary-chinese-insert-yearly-entry'.

+++
*** The calendar can now list and mark diary entries with Chinese dates.
See `diary-chinese-list-entries' and `diary-chinese-mark-entries'.

---
*** The option `calendar-mode-line-format' can now be nil,
which means to do nothing special with the mode line in calendars.

---
*** Many items obsolete since at least version 23.1 have been removed.
The majority were function/variable/face aliases, too numerous to list here.
The remainder were:

**** Functions `calendar-one-frame-setup', `calendar-only-one-frame-setup',
`calendar-two-frame-setup', `european-calendar', `american-calendar'.

**** Hooks `cal-menu-load-hook', `cal-x-load-hook'.

**** Macro `calendar-for-loop'.

**** Variables `european-calendar-style', `diary-face', `hebrew-holidays-{1,4}'.

**** The nil and list forms of `diary-display-function'.

** New ERT function `ert-summarize-tests-batch-and-exit'.

** New js.el option `js-indent-first-init'.

---
** `Info-fontify-maximum-menu-size' can be t for no limit.

+++
** `info-display-manual' can now be given a prefix argument which (any
non-nil value) directs the command to limit the completion
alternatives to currently visited manuals.

---
** ntlm.el has support for NTLM2.

---
** The Rmail commands d, C-d and u now handle repeat counts to delete or
undelete multiple messages.

** Rmail can now render HTML mail messages if your Emacs was built with
libxml2 or if you have the Lynx browser installed.  By default, Rmail
will display the HTML version of a mail message that has both HTML and
plain text parts, if display of HTML email is possible; customize the
`rmail-mime-prefer-html' option to `nil' if you don't want that.

** SES now supports local printer functions; see `ses-define-local-printer'.

** In sh-mode, you can now use `sh-shell' as a file-local variable to
specify the type of shell in use (bash, csh, etc).

** TLS
---
*** Fatal TLS errors are now silent by default.

** URL

*** The URL package accepts now the protocols "ssh", "scp" and "rsync".
When `url-handler-mode' is enabled, file operations for these
protocols as well as for "telnet" and "ftp" are passed to Tramp.

*** The URL package allows customizing the `url-user-agent' string.
The new `url-user-agent' variable can be customized to be a string or
a function.

*** The new interface variable `url-request-noninteractive' can be used
to specify that we're running in a noninteractive context, and that
we should not be queried about things like TLS certificate validity.

*** If URL is used with a https connection, the first callback argument
plist will contain a :peer element that has the output of
`gnutls-peer-status' (if Emacs is built with GnuTLS support).

** Tramp

*** New connection method "nc", which allows to access dumb busyboxes.

** SQL mode

*** New user variable `sql-default-directory' enables remote
connections using Tramp.

*** New command `sql-send-line-and-next' sends the current line to the
interactive buffer and advances to the next line, skipping whitespace
and comments.

*** Add support for Vertica SQL.

** VC and related modes

*** The new command vc-region-history shows the log+diff of the active region.

*** New option `vc-annotate-background-mode' controls whether
the color range from `vc-annotate-color-map' is applied to the
background or to the foreground.

*** `compare-windows' now compares text with the most recently used window
instead of the next window.  The new option `compare-windows-get-window-function'
allows to customize this.

*** Two new faces `compare-windows-removed' and `compare-windows-added'
replace the obsolete face `compare-windows'.

** VHDL mode supports VHDL'08.

** Calculator: decimal display mode uses "," groups, so it's more
fitting for use in money calculations; factorial works with
non-integer inputs.

** HideIfDef mode now support full C/C++ expressions, argumented macro expansions
, interactive macro evaluation and automatic scanning of #defined symbols.

*** New custom variable `hide-ifdef-header-regexp' to define C/C++ header file
name patterns. Default case-insensitive .h, .hh, .hpp and .hxx.
*** New custom variable `hide-ifdef-expand-reinclusion-protection' to prevent
reinclusion protected header files from being fully hidden.
*** New custom variable `hide-ifdef-exclude-define-regexp' to define symbol
name patterns (e.x. all "FOR_DOXYGEN_ONLY_*") to be excluded.

** TeX mode

*** New custom variable `tex-print-file-extension' to help users who
use PDF instead of DVI.

** whitespace-mode: new 'big-indent style highlighting too much indentation.
By default, 32 spaces and four TABs are considered to be too much but
`whitespace-big-indent-regexp' can be configured to change that.

** tildify: `tildify-space-string', `tildify-pattern', and
`tildify-foreach-region-function' variables added making
`tildify-string-alist', `tildify-pattern-alist', and
`tildify-ignored-environments-alist' variables (as well as a few
helper functions) obsolete.

** xref
The new package provides generic framework and new commands to find
and move to definitions, as well as pop back to the original location.

*** New key bindings
`xref-find-definitions' replaces `find-tag' and provides an interface
to pick one destination among several.  Hence, `tags-loop-continue' is
unbound.  `xref-pop-marker-stack' replaces `pop-tag-mark', but uses an
easier binding, which is now unoccupied (`M-,').
`xref-find-definitions-other-window' replaces `find-tag-other-window'.
`xref-find-definitions-other-frame' replaces `find-tag-other-frame'.
`xref-find-apropos' replaces `find-tag-regexp'.

*** New variables
`find-tag-marker-ring-length' is now an obsolete alias for
`xref-marker-ring-length'.  `find-tag-marker-ring' is now an obsolete
alias for a private variable.  `xref-push-marker-stack' and
`xref-pop-marker-stack' should be used to mutate it instead.

** etags
As a result of the above, these commands are now obsolete:
`find-tag-other-window', `find-tag-other-frame', `find-tag-regexp',
`tags-apropos' and `tags-loop-continue'.

** EUDC
EUDC's LDAP backend has been improved.

*** EUDC supports LDAP-over-SSL URLs (ldaps://).

*** EUDC passes LDAP passwords through a pipe to the ldapsearch
subprocess instead of on the command line.

*** EUDC handles LDAP wildcards automatically so the user shouldn't
need to configure this manually anymore.

*** The LDAP configuration section of EUDC's manual has been
rewritten.

There have also been customization changes.

*** New custom variable `eudc-server-hotlist' to allow specifying
multiple EUDC servers in init file.

*** Custom variable `eudc-inline-query-format' defaults to completing
on email and firstname instead of surname.

*** Custom variable `eudc-expansion-overwrites-query' defaults to nil
to avoid interfering with the kill ring.

*** Custom variable `eudc-inline-expansion-format' defaults to
"Firstname Surname <mail-address>".

*** New custom variable `ldap-ldapsearch-password-prompt-regexp' to
allow overriding the regular expression that recognizes the ldapsearch
command line's password prompt.

** Eshell

*** The new built-in command `clear' can scroll window contents out of sight.

** Browse-url

*** Support for the Conkeror web browser.

---
*** Support for several ancient browsers is now officially obsolete.

+++
** tar-mode: new `tar-new-entry' command, allowing for new members to
be added to the archive.

** Autorevert: dired buffers are also auto-reverted via file
notifications, if Emacs is compiled with file notification support.

** Obsolete packages

---
*** gulp.el


* New Modes and Packages in Emacs 25.1

** cl-generic.el provides CLOS-style multiple-dispatch generic functions.

** scss-mode (a minor variant of css-mode)

** let-alist is a new macro (and a package) that allows one to easily
let-bind the values stored in an alist.

** `tildify-mode' allows to automatically insert hard spaces as one
types the text.  Breaking line after a single-character words is
forbidden by Czech and Polish typography (and may be discouraged in
other languages), so `auto-tildify-mode' makes it easier to create
a typographically-correct documents.

* Incompatible Lisp Changes in Emacs 25.1

** `save-excursion' does not save&restore the mark any more.

** read-buffer-function can now be called with a 4th argument (`predicate').

** completion-table-dynamic stays in the minibuffer.
If you want the old behavior of calling the function in the buffer
from which the minibuffer was entered, call it with the new argument
`switch-buffer'.

** window-configurations no longer record the buffers's marks.

** inhibit-modification-hooks now also inhibits lock-file checks, as well as
active region handling.

** deactivate-mark is now buffer-local.

** `cl-the' now asserts that its argument is of the given type.

** `process-running-child-p` may now return a numeric process
group ID instead of `t'.

+++
** Mouse click events on mode line or header line no longer include
any reference to a buffer position.  The 6th member of the mouse
position list returned for such events is now nil.

** Menu items in keymaps do not support the "key shortcut cache" any more.
These slots used to hold key-shortcut data, but have been obsolete since
Emacs-21.

** Emacs no longer downcases the first letter of a system diagnostic
when signaling a file error.  For example, it now reports "Permission
denied" instead of "permission denied".  The old behavior was problematic
in languages like German where downcasing rules depend on grammar.

+++
** The character classes [:alpha:] and [:alnum:] in regular expressions
now match multibyte characters using Unicode character properties.
If you want the old behavior where they matched any character with
word syntax, use `\sw' instead.


* Lisp Changes in Emacs 25.1

** New function `make-process' provides an alternative interface to
`start-process'.  It allows programs to set process parameters such as
process filter, sentinel, etc., through keyword arguments (similar to
`make-network-process').

** `read-buffer' takes a new `predicate' argument.

** Emacs Lisp now supports generators.

** New finalizer facility for running code when objects
   become unreachable.

** lexical closures can use (:documentation <form>) to build their docstring.
It should be placed right where the docstring would be, and <form> is then
evaluated (and should return a string) when the closure is built.

** define-inline provides a new way to define inlinable functions.

** New function macroexpand-1 to perform a single step of macroexpansion.

** Some "x-*" were obsoleted:
*** x-select-text is renamed gui-select-text.
*** x-selection-value is renamed gui-selection-value.
*** x-get-selection is renamed gui-get-selection.
*** x-get-clipboard and x-clipboard-yank are marked obsolete.
*** x-get-selection-value is renamed to gui-get-primary-selection.
*** x-set-selection is renamed to gui-set-selection

** New function `alist-get', which is also a valid place (aka lvalue).

** New function `funcall-interactively', which works like `funcall'
but makes `called-interactively-p' treat the function as (you guessed it)
called interactively.

** New function `function-put' to use instead of `put' for function properties.

+++
** New properties that can be specified with `declare':
*** (interactive-only INSTEAD), says to use INSTEAD for non-interactive use.
*** (pure VAL), if VAL is non-nil, indicates the function is pure.
*** (side-effect-free VAL), if VAL is non-nil, indicates the function does not
have side effects.

+++
** New macro `with-file-modes', for evaluating expressions with default file
permissions set to temporary values (e.g., for creating private files).

** You can access the slots of structures using `cl-struct-slot-value'.

** Functions `rmail-delete-forward' and `rmail-delete-backward' take an
optional repeat-count argument.

** Function `sort' can deal with vectors.

** Function `system-name' now returns an updated value if the current
system's name has changed or if the Emacs process has changed systems,
and to avoid long waits it no longer consults DNS to canonicalize the
name.  The variable `system-name' is now obsolete.

+++
** Function `write-region' no longer outputs "Wrote FILE" in batch mode.

---
** New utilities in subr-x.el:
*** New macros `if-let' and `when-let' allow defining bindings and to
    execute code depending whether all values are true.
*** New macros `thread-first' and `thread-last' allow threading a form
    as the first or last argument of subsequent forms.

+++
** Time-related changes:

*** Time-related functions now consistently accept numbers
(representing seconds since the epoch) and nil (representing the
current time) as well as the usual list-of-integer representation.
Affected functions include `current-time-string', `current-time-zone',
`decode-time', `float-time', `format-time-string', `seconds-to-time',
`time-add', `time-less-p', `time-subtract', `time-to-day-in-year',
`time-to-days', and `time-to-seconds'.

*** The `encode-time-value' and `with-decoded-time-value' macros have
been obsoleted.

*** `calendar-next-time-zone-transition', `time-add', and
`time-subtract' no longer return time values in the obsolete and
undocumented integer-pair format.  Instead, they return a list of two
integers.

+++
** New function `set-binary-mode' allows to switch a standard stream
of the Emacs process to binary I/O mode.


* Changes in Frames and Windows Code in Emacs 25.1

+++
** Emacs can now draw horizontal scroll bars on some platforms that
provide toolkit scroll bars, namely Gtk+, Lucid, Motif and Windows.
Horizontal scroll bars are turned off by default.
*** New function `horizontal-scroll-bars-available-p' telling whether
    horizontal scroll bars are available on the underlying system.
*** New mode `horizontal-scroll-bar-mode' to toggle horizontal scroll
    bars on all existing and future frames.
*** New function `toggle-horizontal-scroll-bar' to toggle horizontal
    scroll bars on the selected frame.
*** New frame parameters `horizontal-scroll-bars' and
    `scroll-bar-height' to set horizontal scroll bars and their height
    for individual frames and in `default-frame-alist'.
*** New functions `frame-scroll-bar-height' and
    `window-scroll-bar-height' return the height of horizontal scroll
    bars on a specific frame or window.
*** `set-window-scroll-bars' now accepts five parameters where the last
    two specify height and type of the window's horizontal scroll bar.
*** `window-scroll-bars' now returns type and sizes of horizontal scroll
    bars too.
*** New buffer-local variables `horizontal-scroll-bar' and
    `scroll-bar-height'.

+++
** The height of a frame's menu and tool bar are no longer counted in the
frame's text height.  This means that the text height stands only for
the height of the frame's root window plus that of the echo area (if
present).  This was already the behavior for frames with external tool
and menu bars (like in the Gtk builds) but has now been extended to all
builds.

+++
** Frames now do not necessarily preserve the number of columns or lines
they display when setting default font, menu bar, fringe width, or
scroll bars.  In particular, maximized and fullscreen frames are
conceptually never resized if such settings change.  For fullheight and
fullwidth frames, the behavior may depend on the toolkit used.
*** New option `frame-inhibit-implied-resize' if non-nil, means that
   setting default font, menu bar, fringe width, or scroll bars of a
   specific frame does not resize that frame in order to preserve the
   number of columns or lines it displays.

+++
** New function `window-preserve-size' allows to preserve the size of
windows without "fixing" it.  It's supported by `fit-window-to-buffer',
`temp-buffer-resize-mode' and `display-buffer'.

** Tearoff menus and detachable toolbars for Gtk+ has been removed.
Those features have been deprecated in Gtk+ for a long time.


* Changes in Emacs 25.1 on Non-Free Operating Systems

---
** Building Emacs for MS-Windows requires at least Windows XP
or Windows Server 2003.  The built binaries still run on all versions
of Windows starting with Windows 9X.

+++
** Emacs running on MS-Windows now supports the daemon mode.

** OS X 10.5 or older is no longer supported.

** OS X on PowerPC is no longer supported.


----------------------------------------------------------------------
This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.


Local variables:
coding: utf-8
mode: outline
paragraph-separate: "[ 	]*$"
end:
